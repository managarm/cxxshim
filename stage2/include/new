#ifndef _CXXSHIM_NEW
#define _CXXSHIM_NEW

#include <stddef.h>

#ifdef CXXSHIM_INTEGRATE_GCC

#include_next <new>

#else // CXXSHIM_INTEGRATE_GCC

inline void *operator new (size_t, void *p) {
	return p;
}

namespace std {

enum class align_val_t : size_t { };

struct destroying_delete_t { explicit destroying_delete_t() = default; };
inline constexpr destroying_delete_t destroying_delete { };

template<typename T>
[[nodiscard]] constexpr T *launder(T *p) noexcept {
	return __builtin_launder(p);
}

} // namespace std

#endif // !(CXXSHIM_INTEGRATE_GCC)

#endif // _CXXSHIM_NEW
